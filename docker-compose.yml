version: '3.8'

services:
  vpn-panel:
    build: .
    container_name: vpn-panel
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      - PORT=8080
      - REDIS_URL=redis://redis:6379
      - DB_PATH=/var/lib/vpn-panel/users.db
    volumes:
      - vpn_panel_data:/var/lib/vpn-panel
      - vpn_panel_config:/etc/vpn-panel
      - vpn_panel_logs:/var/log/vpn-panel
      - wireguard_config:/etc/wireguard
      - openvpn_config:/etc/openvpn
    depends_on:
      - redis
    networks:
      - vpn-network
    cap_add:
      - NET_ADMIN
      - SYS_ADMIN
    security_opt:
      - no-new-privileges:true
    read_only: false
    tmpfs:
      - /tmp
      - /var/tmp

  redis:
    image: redis:7-alpine
    container_name: vpn-panel-redis
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - vpn-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Optional: Add monitoring stack
  prometheus:
    image: prom/prometheus:latest
    container_name: vpn-panel-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - vpn-network

  grafana:
    image: grafana/grafana:latest
    container_name: vpn-panel-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    networks:
      - vpn-network
    depends_on:
      - prometheus

volumes:
  vpn_panel_data:
    driver: local
  vpn_panel_config:
    driver: local
  vpn_panel_logs:
    driver: local
  wireguard_config:
    driver: local
  openvpn_config:
    driver: local
  redis_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  vpn-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16 